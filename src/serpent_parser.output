Terminals unused in grammar

   KW_WHILE
   KW_FOR
   KW_IN
   KW_RANGE


Grammar

    0 $accept: input $end

    1 input: statement_list

    2 statement_list: statement_list statement
    3               | statement

    4 statement: print_statement ';'
    5          | assign_statement ';'
    6          | if_statement

    7 if_statement: KW_IF expr statement_block opt_else

    8 opt_else: KW_ELSE statement_block

    9 statement_block: '{' statement_list '}'

   10 print_statement: KW_PRINT '(' arg_list ')'

   11 arg_list: arg_list ',' argument
   12         | argument

   13 argument: expr
   14         | STRING_LITERAL

   15 assign_statement: TK_ID '=' expr

   16 expr: KW_INPUT '(' STRING_LITERAL ')'
   17     | relational_expr

   18 relational_expr: expra OP_LTE expra
   19                | expra OP_GTE expra
   20                | expra OP_LT expra
   21                | expra OP_GT expra
   22                | expra OP_NE expra
   23                | expra OP_EQ expra
   24                | expra

   25 expra: expra '+' term
   26      | expra '-' term
   27      | term

   28 term: term '*' factor
   29     | term '/' factor
   30     | term '%' factor
   31     | exponent

   32 exponent: factor OP_EXP factor
   33         | factor

   34 factor: '(' expr ')'
   35       | '-' factor
   36       | TK_NUM
   37       | TK_ID


Terminals, with rules where they appear

$end (0) 0
'%' (37) 30
'(' (40) 10 16 34
')' (41) 10 16 34
'*' (42) 28
'+' (43) 25
',' (44) 11
'-' (45) 26 35
'/' (47) 29
';' (59) 4 5
'=' (61) 15
'{' (123) 9
'}' (125) 9
error (256)
TK_NUM (258) 36
TK_ID (259) 15 37
STRING_LITERAL (260) 14 16
KW_IF (261) 7
KW_ELSE (262) 8
KW_WHILE (263)
KW_FOR (264)
KW_IN (265)
KW_RANGE (266)
KW_PRINT (267) 10
KW_INPUT (268) 16
OP_EXP (269) 32
OP_LT (270) 20
OP_GT (271) 21
OP_LTE (272) 18
OP_GTE (273) 19
OP_NE (274) 22
OP_EQ (275) 23


Nonterminals, with rules where they appear

$accept (33)
    on left: 0
input (34)
    on left: 1, on right: 0
statement_list (35)
    on left: 2 3, on right: 1 2 9
statement (36)
    on left: 4 5 6, on right: 2 3
if_statement (37)
    on left: 7, on right: 6
opt_else (38)
    on left: 8, on right: 7
statement_block (39)
    on left: 9, on right: 7 8
print_statement (40)
    on left: 10, on right: 4
arg_list (41)
    on left: 11 12, on right: 10 11
argument (42)
    on left: 13 14, on right: 11 12
assign_statement (43)
    on left: 15, on right: 5
expr (44)
    on left: 16 17, on right: 7 13 15 34
relational_expr (45)
    on left: 18 19 20 21 22 23 24, on right: 17
expra (46)
    on left: 25 26 27, on right: 18 19 20 21 22 23 24 25 26
term (47)
    on left: 28 29 30 31, on right: 25 26 27 28 29 30
exponent (48)
    on left: 32 33, on right: 31
factor (49)
    on left: 34 35 36 37, on right: 28 29 30 32 33 35


State 0

    0 $accept: . input $end
    1 input: . statement_list
    2 statement_list: . statement_list statement
    3               | . statement
    4 statement: . print_statement ';'
    5          | . assign_statement ';'
    6          | . if_statement
    7 if_statement: . KW_IF expr statement_block opt_else
   10 print_statement: . KW_PRINT '(' arg_list ')'
   15 assign_statement: . TK_ID '=' expr

    TK_ID     shift, and go to state 1
    KW_IF     shift, and go to state 2
    KW_PRINT  shift, and go to state 3

    input             go to state 4
    statement_list    go to state 5
    statement         go to state 6
    if_statement      go to state 7
    print_statement   go to state 8
    assign_statement  go to state 9


State 1

   15 assign_statement: TK_ID . '=' expr

    '='  shift, and go to state 10


State 2

    7 if_statement: KW_IF . expr statement_block opt_else
   16 expr: . KW_INPUT '(' STRING_LITERAL ')'
   17     | . relational_expr
   18 relational_expr: . expra OP_LTE expra
   19                | . expra OP_GTE expra
   20                | . expra OP_LT expra
   21                | . expra OP_GT expra
   22                | . expra OP_NE expra
   23                | . expra OP_EQ expra
   24                | . expra
   25 expra: . expra '+' term
   26      | . expra '-' term
   27      | . term
   28 term: . term '*' factor
   29     | . term '/' factor
   30     | . term '%' factor
   31     | . exponent
   32 exponent: . factor OP_EXP factor
   33         | . factor
   34 factor: . '(' expr ')'
   35       | . '-' factor
   36       | . TK_NUM
   37       | . TK_ID

    TK_NUM    shift, and go to state 11
    TK_ID     shift, and go to state 12
    KW_INPUT  shift, and go to state 13
    '('       shift, and go to state 14
    '-'       shift, and go to state 15

    expr             go to state 16
    relational_expr  go to state 17
    expra            go to state 18
    term             go to state 19
    exponent         go to state 20
    factor           go to state 21


State 3

   10 print_statement: KW_PRINT . '(' arg_list ')'

    '('  shift, and go to state 22


State 4

    0 $accept: input . $end

    $end  shift, and go to state 23


State 5

    1 input: statement_list .  [$end]
    2 statement_list: statement_list . statement
    4 statement: . print_statement ';'
    5          | . assign_statement ';'
    6          | . if_statement
    7 if_statement: . KW_IF expr statement_block opt_else
   10 print_statement: . KW_PRINT '(' arg_list ')'
   15 assign_statement: . TK_ID '=' expr

    TK_ID     shift, and go to state 1
    KW_IF     shift, and go to state 2
    KW_PRINT  shift, and go to state 3

    $default  reduce using rule 1 (input)

    statement         go to state 24
    if_statement      go to state 7
    print_statement   go to state 8
    assign_statement  go to state 9


State 6

    3 statement_list: statement .

    $default  reduce using rule 3 (statement_list)


State 7

    6 statement: if_statement .

    $default  reduce using rule 6 (statement)


State 8

    4 statement: print_statement . ';'

    ';'  shift, and go to state 25


State 9

    5 statement: assign_statement . ';'

    ';'  shift, and go to state 26


State 10

   15 assign_statement: TK_ID '=' . expr
   16 expr: . KW_INPUT '(' STRING_LITERAL ')'
   17     | . relational_expr
   18 relational_expr: . expra OP_LTE expra
   19                | . expra OP_GTE expra
   20                | . expra OP_LT expra
   21                | . expra OP_GT expra
   22                | . expra OP_NE expra
   23                | . expra OP_EQ expra
   24                | . expra
   25 expra: . expra '+' term
   26      | . expra '-' term
   27      | . term
   28 term: . term '*' factor
   29     | . term '/' factor
   30     | . term '%' factor
   31     | . exponent
   32 exponent: . factor OP_EXP factor
   33         | . factor
   34 factor: . '(' expr ')'
   35       | . '-' factor
   36       | . TK_NUM
   37       | . TK_ID

    TK_NUM    shift, and go to state 11
    TK_ID     shift, and go to state 12
    KW_INPUT  shift, and go to state 13
    '('       shift, and go to state 14
    '-'       shift, and go to state 15

    expr             go to state 27
    relational_expr  go to state 17
    expra            go to state 18
    term             go to state 19
    exponent         go to state 20
    factor           go to state 21


State 11

   36 factor: TK_NUM .

    $default  reduce using rule 36 (factor)


State 12

   37 factor: TK_ID .

    $default  reduce using rule 37 (factor)


State 13

   16 expr: KW_INPUT . '(' STRING_LITERAL ')'

    '('  shift, and go to state 28


State 14

   16 expr: . KW_INPUT '(' STRING_LITERAL ')'
   17     | . relational_expr
   18 relational_expr: . expra OP_LTE expra
   19                | . expra OP_GTE expra
   20                | . expra OP_LT expra
   21                | . expra OP_GT expra
   22                | . expra OP_NE expra
   23                | . expra OP_EQ expra
   24                | . expra
   25 expra: . expra '+' term
   26      | . expra '-' term
   27      | . term
   28 term: . term '*' factor
   29     | . term '/' factor
   30     | . term '%' factor
   31     | . exponent
   32 exponent: . factor OP_EXP factor
   33         | . factor
   34 factor: . '(' expr ')'
   34       | '(' . expr ')'
   35       | . '-' factor
   36       | . TK_NUM
   37       | . TK_ID

    TK_NUM    shift, and go to state 11
    TK_ID     shift, and go to state 12
    KW_INPUT  shift, and go to state 13
    '('       shift, and go to state 14
    '-'       shift, and go to state 15

    expr             go to state 29
    relational_expr  go to state 17
    expra            go to state 18
    term             go to state 19
    exponent         go to state 20
    factor           go to state 21


State 15

   34 factor: . '(' expr ')'
   35       | . '-' factor
   35       | '-' . factor
   36       | . TK_NUM
   37       | . TK_ID

    TK_NUM  shift, and go to state 11
    TK_ID   shift, and go to state 12
    '('     shift, and go to state 14
    '-'     shift, and go to state 15

    factor  go to state 30


State 16

    7 if_statement: KW_IF expr . statement_block opt_else
    9 statement_block: . '{' statement_list '}'

    '{'  shift, and go to state 31

    statement_block  go to state 32


State 17

   17 expr: relational_expr .

    $default  reduce using rule 17 (expr)


State 18

   18 relational_expr: expra . OP_LTE expra
   19                | expra . OP_GTE expra
   20                | expra . OP_LT expra
   21                | expra . OP_GT expra
   22                | expra . OP_NE expra
   23                | expra . OP_EQ expra
   24                | expra .  [';', '{', ')', ',']
   25 expra: expra . '+' term
   26      | expra . '-' term

    OP_LT   shift, and go to state 33
    OP_GT   shift, and go to state 34
    OP_LTE  shift, and go to state 35
    OP_GTE  shift, and go to state 36
    OP_NE   shift, and go to state 37
    OP_EQ   shift, and go to state 38
    '+'     shift, and go to state 39
    '-'     shift, and go to state 40

    $default  reduce using rule 24 (relational_expr)


State 19

   27 expra: term .  [OP_LT, OP_GT, OP_LTE, OP_GTE, OP_NE, OP_EQ, ';', '{', ')', ',', '+', '-']
   28 term: term . '*' factor
   29     | term . '/' factor
   30     | term . '%' factor

    '*'  shift, and go to state 41
    '/'  shift, and go to state 42
    '%'  shift, and go to state 43

    $default  reduce using rule 27 (expra)


State 20

   31 term: exponent .

    $default  reduce using rule 31 (term)


State 21

   32 exponent: factor . OP_EXP factor
   33         | factor .  [OP_LT, OP_GT, OP_LTE, OP_GTE, OP_NE, OP_EQ, ';', '{', ')', ',', '+', '-', '*', '/', '%']

    OP_EXP  shift, and go to state 44

    $default  reduce using rule 33 (exponent)


State 22

   10 print_statement: KW_PRINT '(' . arg_list ')'
   11 arg_list: . arg_list ',' argument
   12         | . argument
   13 argument: . expr
   14         | . STRING_LITERAL
   16 expr: . KW_INPUT '(' STRING_LITERAL ')'
   17     | . relational_expr
   18 relational_expr: . expra OP_LTE expra
   19                | . expra OP_GTE expra
   20                | . expra OP_LT expra
   21                | . expra OP_GT expra
   22                | . expra OP_NE expra
   23                | . expra OP_EQ expra
   24                | . expra
   25 expra: . expra '+' term
   26      | . expra '-' term
   27      | . term
   28 term: . term '*' factor
   29     | . term '/' factor
   30     | . term '%' factor
   31     | . exponent
   32 exponent: . factor OP_EXP factor
   33         | . factor
   34 factor: . '(' expr ')'
   35       | . '-' factor
   36       | . TK_NUM
   37       | . TK_ID

    TK_NUM          shift, and go to state 11
    TK_ID           shift, and go to state 12
    STRING_LITERAL  shift, and go to state 45
    KW_INPUT        shift, and go to state 13
    '('             shift, and go to state 14
    '-'             shift, and go to state 15

    arg_list         go to state 46
    argument         go to state 47
    expr             go to state 48
    relational_expr  go to state 17
    expra            go to state 18
    term             go to state 19
    exponent         go to state 20
    factor           go to state 21


State 23

    0 $accept: input $end .

    $default  accept


State 24

    2 statement_list: statement_list statement .

    $default  reduce using rule 2 (statement_list)


State 25

    4 statement: print_statement ';' .

    $default  reduce using rule 4 (statement)


State 26

    5 statement: assign_statement ';' .

    $default  reduce using rule 5 (statement)


State 27

   15 assign_statement: TK_ID '=' expr .

    $default  reduce using rule 15 (assign_statement)


State 28

   16 expr: KW_INPUT '(' . STRING_LITERAL ')'

    STRING_LITERAL  shift, and go to state 49


State 29

   34 factor: '(' expr . ')'

    ')'  shift, and go to state 50


State 30

   35 factor: '-' factor .

    $default  reduce using rule 35 (factor)


State 31

    2 statement_list: . statement_list statement
    3               | . statement
    4 statement: . print_statement ';'
    5          | . assign_statement ';'
    6          | . if_statement
    7 if_statement: . KW_IF expr statement_block opt_else
    9 statement_block: '{' . statement_list '}'
   10 print_statement: . KW_PRINT '(' arg_list ')'
   15 assign_statement: . TK_ID '=' expr

    TK_ID     shift, and go to state 1
    KW_IF     shift, and go to state 2
    KW_PRINT  shift, and go to state 3

    statement_list    go to state 51
    statement         go to state 6
    if_statement      go to state 7
    print_statement   go to state 8
    assign_statement  go to state 9


State 32

    7 if_statement: KW_IF expr statement_block . opt_else
    8 opt_else: . KW_ELSE statement_block

    KW_ELSE  shift, and go to state 52

    opt_else  go to state 53


State 33

   20 relational_expr: expra OP_LT . expra
   25 expra: . expra '+' term
   26      | . expra '-' term
   27      | . term
   28 term: . term '*' factor
   29     | . term '/' factor
   30     | . term '%' factor
   31     | . exponent
   32 exponent: . factor OP_EXP factor
   33         | . factor
   34 factor: . '(' expr ')'
   35       | . '-' factor
   36       | . TK_NUM
   37       | . TK_ID

    TK_NUM  shift, and go to state 11
    TK_ID   shift, and go to state 12
    '('     shift, and go to state 14
    '-'     shift, and go to state 15

    expra     go to state 54
    term      go to state 19
    exponent  go to state 20
    factor    go to state 21


State 34

   21 relational_expr: expra OP_GT . expra
   25 expra: . expra '+' term
   26      | . expra '-' term
   27      | . term
   28 term: . term '*' factor
   29     | . term '/' factor
   30     | . term '%' factor
   31     | . exponent
   32 exponent: . factor OP_EXP factor
   33         | . factor
   34 factor: . '(' expr ')'
   35       | . '-' factor
   36       | . TK_NUM
   37       | . TK_ID

    TK_NUM  shift, and go to state 11
    TK_ID   shift, and go to state 12
    '('     shift, and go to state 14
    '-'     shift, and go to state 15

    expra     go to state 55
    term      go to state 19
    exponent  go to state 20
    factor    go to state 21


State 35

   18 relational_expr: expra OP_LTE . expra
   25 expra: . expra '+' term
   26      | . expra '-' term
   27      | . term
   28 term: . term '*' factor
   29     | . term '/' factor
   30     | . term '%' factor
   31     | . exponent
   32 exponent: . factor OP_EXP factor
   33         | . factor
   34 factor: . '(' expr ')'
   35       | . '-' factor
   36       | . TK_NUM
   37       | . TK_ID

    TK_NUM  shift, and go to state 11
    TK_ID   shift, and go to state 12
    '('     shift, and go to state 14
    '-'     shift, and go to state 15

    expra     go to state 56
    term      go to state 19
    exponent  go to state 20
    factor    go to state 21


State 36

   19 relational_expr: expra OP_GTE . expra
   25 expra: . expra '+' term
   26      | . expra '-' term
   27      | . term
   28 term: . term '*' factor
   29     | . term '/' factor
   30     | . term '%' factor
   31     | . exponent
   32 exponent: . factor OP_EXP factor
   33         | . factor
   34 factor: . '(' expr ')'
   35       | . '-' factor
   36       | . TK_NUM
   37       | . TK_ID

    TK_NUM  shift, and go to state 11
    TK_ID   shift, and go to state 12
    '('     shift, and go to state 14
    '-'     shift, and go to state 15

    expra     go to state 57
    term      go to state 19
    exponent  go to state 20
    factor    go to state 21


State 37

   22 relational_expr: expra OP_NE . expra
   25 expra: . expra '+' term
   26      | . expra '-' term
   27      | . term
   28 term: . term '*' factor
   29     | . term '/' factor
   30     | . term '%' factor
   31     | . exponent
   32 exponent: . factor OP_EXP factor
   33         | . factor
   34 factor: . '(' expr ')'
   35       | . '-' factor
   36       | . TK_NUM
   37       | . TK_ID

    TK_NUM  shift, and go to state 11
    TK_ID   shift, and go to state 12
    '('     shift, and go to state 14
    '-'     shift, and go to state 15

    expra     go to state 58
    term      go to state 19
    exponent  go to state 20
    factor    go to state 21


State 38

   23 relational_expr: expra OP_EQ . expra
   25 expra: . expra '+' term
   26      | . expra '-' term
   27      | . term
   28 term: . term '*' factor
   29     | . term '/' factor
   30     | . term '%' factor
   31     | . exponent
   32 exponent: . factor OP_EXP factor
   33         | . factor
   34 factor: . '(' expr ')'
   35       | . '-' factor
   36       | . TK_NUM
   37       | . TK_ID

    TK_NUM  shift, and go to state 11
    TK_ID   shift, and go to state 12
    '('     shift, and go to state 14
    '-'     shift, and go to state 15

    expra     go to state 59
    term      go to state 19
    exponent  go to state 20
    factor    go to state 21


State 39

   25 expra: expra '+' . term
   28 term: . term '*' factor
   29     | . term '/' factor
   30     | . term '%' factor
   31     | . exponent
   32 exponent: . factor OP_EXP factor
   33         | . factor
   34 factor: . '(' expr ')'
   35       | . '-' factor
   36       | . TK_NUM
   37       | . TK_ID

    TK_NUM  shift, and go to state 11
    TK_ID   shift, and go to state 12
    '('     shift, and go to state 14
    '-'     shift, and go to state 15

    term      go to state 60
    exponent  go to state 20
    factor    go to state 21


State 40

   26 expra: expra '-' . term
   28 term: . term '*' factor
   29     | . term '/' factor
   30     | . term '%' factor
   31     | . exponent
   32 exponent: . factor OP_EXP factor
   33         | . factor
   34 factor: . '(' expr ')'
   35       | . '-' factor
   36       | . TK_NUM
   37       | . TK_ID

    TK_NUM  shift, and go to state 11
    TK_ID   shift, and go to state 12
    '('     shift, and go to state 14
    '-'     shift, and go to state 15

    term      go to state 61
    exponent  go to state 20
    factor    go to state 21


State 41

   28 term: term '*' . factor
   34 factor: . '(' expr ')'
   35       | . '-' factor
   36       | . TK_NUM
   37       | . TK_ID

    TK_NUM  shift, and go to state 11
    TK_ID   shift, and go to state 12
    '('     shift, and go to state 14
    '-'     shift, and go to state 15

    factor  go to state 62


State 42

   29 term: term '/' . factor
   34 factor: . '(' expr ')'
   35       | . '-' factor
   36       | . TK_NUM
   37       | . TK_ID

    TK_NUM  shift, and go to state 11
    TK_ID   shift, and go to state 12
    '('     shift, and go to state 14
    '-'     shift, and go to state 15

    factor  go to state 63


State 43

   30 term: term '%' . factor
   34 factor: . '(' expr ')'
   35       | . '-' factor
   36       | . TK_NUM
   37       | . TK_ID

    TK_NUM  shift, and go to state 11
    TK_ID   shift, and go to state 12
    '('     shift, and go to state 14
    '-'     shift, and go to state 15

    factor  go to state 64


State 44

   32 exponent: factor OP_EXP . factor
   34 factor: . '(' expr ')'
   35       | . '-' factor
   36       | . TK_NUM
   37       | . TK_ID

    TK_NUM  shift, and go to state 11
    TK_ID   shift, and go to state 12
    '('     shift, and go to state 14
    '-'     shift, and go to state 15

    factor  go to state 65


State 45

   14 argument: STRING_LITERAL .

    $default  reduce using rule 14 (argument)


State 46

   10 print_statement: KW_PRINT '(' arg_list . ')'
   11 arg_list: arg_list . ',' argument

    ')'  shift, and go to state 66
    ','  shift, and go to state 67


State 47

   12 arg_list: argument .

    $default  reduce using rule 12 (arg_list)


State 48

   13 argument: expr .

    $default  reduce using rule 13 (argument)


State 49

   16 expr: KW_INPUT '(' STRING_LITERAL . ')'

    ')'  shift, and go to state 68


State 50

   34 factor: '(' expr ')' .

    $default  reduce using rule 34 (factor)


State 51

    2 statement_list: statement_list . statement
    4 statement: . print_statement ';'
    5          | . assign_statement ';'
    6          | . if_statement
    7 if_statement: . KW_IF expr statement_block opt_else
    9 statement_block: '{' statement_list . '}'
   10 print_statement: . KW_PRINT '(' arg_list ')'
   15 assign_statement: . TK_ID '=' expr

    TK_ID     shift, and go to state 1
    KW_IF     shift, and go to state 2
    KW_PRINT  shift, and go to state 3
    '}'       shift, and go to state 69

    statement         go to state 24
    if_statement      go to state 7
    print_statement   go to state 8
    assign_statement  go to state 9


State 52

    8 opt_else: KW_ELSE . statement_block
    9 statement_block: . '{' statement_list '}'

    '{'  shift, and go to state 31

    statement_block  go to state 70


State 53

    7 if_statement: KW_IF expr statement_block opt_else .

    $default  reduce using rule 7 (if_statement)


State 54

   20 relational_expr: expra OP_LT expra .  [';', '{', ')', ',']
   25 expra: expra . '+' term
   26      | expra . '-' term

    '+'  shift, and go to state 39
    '-'  shift, and go to state 40

    $default  reduce using rule 20 (relational_expr)


State 55

   21 relational_expr: expra OP_GT expra .  [';', '{', ')', ',']
   25 expra: expra . '+' term
   26      | expra . '-' term

    '+'  shift, and go to state 39
    '-'  shift, and go to state 40

    $default  reduce using rule 21 (relational_expr)


State 56

   18 relational_expr: expra OP_LTE expra .  [';', '{', ')', ',']
   25 expra: expra . '+' term
   26      | expra . '-' term

    '+'  shift, and go to state 39
    '-'  shift, and go to state 40

    $default  reduce using rule 18 (relational_expr)


State 57

   19 relational_expr: expra OP_GTE expra .  [';', '{', ')', ',']
   25 expra: expra . '+' term
   26      | expra . '-' term

    '+'  shift, and go to state 39
    '-'  shift, and go to state 40

    $default  reduce using rule 19 (relational_expr)


State 58

   22 relational_expr: expra OP_NE expra .  [';', '{', ')', ',']
   25 expra: expra . '+' term
   26      | expra . '-' term

    '+'  shift, and go to state 39
    '-'  shift, and go to state 40

    $default  reduce using rule 22 (relational_expr)


State 59

   23 relational_expr: expra OP_EQ expra .  [';', '{', ')', ',']
   25 expra: expra . '+' term
   26      | expra . '-' term

    '+'  shift, and go to state 39
    '-'  shift, and go to state 40

    $default  reduce using rule 23 (relational_expr)


State 60

   25 expra: expra '+' term .  [OP_LT, OP_GT, OP_LTE, OP_GTE, OP_NE, OP_EQ, ';', '{', ')', ',', '+', '-']
   28 term: term . '*' factor
   29     | term . '/' factor
   30     | term . '%' factor

    '*'  shift, and go to state 41
    '/'  shift, and go to state 42
    '%'  shift, and go to state 43

    $default  reduce using rule 25 (expra)


State 61

   26 expra: expra '-' term .  [OP_LT, OP_GT, OP_LTE, OP_GTE, OP_NE, OP_EQ, ';', '{', ')', ',', '+', '-']
   28 term: term . '*' factor
   29     | term . '/' factor
   30     | term . '%' factor

    '*'  shift, and go to state 41
    '/'  shift, and go to state 42
    '%'  shift, and go to state 43

    $default  reduce using rule 26 (expra)


State 62

   28 term: term '*' factor .

    $default  reduce using rule 28 (term)


State 63

   29 term: term '/' factor .

    $default  reduce using rule 29 (term)


State 64

   30 term: term '%' factor .

    $default  reduce using rule 30 (term)


State 65

   32 exponent: factor OP_EXP factor .

    $default  reduce using rule 32 (exponent)


State 66

   10 print_statement: KW_PRINT '(' arg_list ')' .

    $default  reduce using rule 10 (print_statement)


State 67

   11 arg_list: arg_list ',' . argument
   13 argument: . expr
   14         | . STRING_LITERAL
   16 expr: . KW_INPUT '(' STRING_LITERAL ')'
   17     | . relational_expr
   18 relational_expr: . expra OP_LTE expra
   19                | . expra OP_GTE expra
   20                | . expra OP_LT expra
   21                | . expra OP_GT expra
   22                | . expra OP_NE expra
   23                | . expra OP_EQ expra
   24                | . expra
   25 expra: . expra '+' term
   26      | . expra '-' term
   27      | . term
   28 term: . term '*' factor
   29     | . term '/' factor
   30     | . term '%' factor
   31     | . exponent
   32 exponent: . factor OP_EXP factor
   33         | . factor
   34 factor: . '(' expr ')'
   35       | . '-' factor
   36       | . TK_NUM
   37       | . TK_ID

    TK_NUM          shift, and go to state 11
    TK_ID           shift, and go to state 12
    STRING_LITERAL  shift, and go to state 45
    KW_INPUT        shift, and go to state 13
    '('             shift, and go to state 14
    '-'             shift, and go to state 15

    argument         go to state 71
    expr             go to state 48
    relational_expr  go to state 17
    expra            go to state 18
    term             go to state 19
    exponent         go to state 20
    factor           go to state 21


State 68

   16 expr: KW_INPUT '(' STRING_LITERAL ')' .

    $default  reduce using rule 16 (expr)


State 69

    9 statement_block: '{' statement_list '}' .

    $default  reduce using rule 9 (statement_block)


State 70

    8 opt_else: KW_ELSE statement_block .

    $default  reduce using rule 8 (opt_else)


State 71

   11 arg_list: arg_list ',' argument .

    $default  reduce using rule 11 (arg_list)

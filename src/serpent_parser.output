Terminals unused in grammar

   KW_WHILE


Grammar

    0 $accept: input $end

    1 input: statement_list

    2 statement_list: statement_list statement
    3               | statement

    4 statement: print_statement ';'
    5          | assign_statement ';'
    6          | for_statement
    7          | if_statement

    8 if_statement: KW_IF expr statement_block opt_else

    9 opt_else: KW_ELSE statement_block

   10 for_statement: KW_FOR TK_ID KW_IN KW_RANGE '(' expr ',' expr ')' statement_block

   11 statement_block: '{' statement_list '}'

   12 print_statement: KW_PRINT '(' arg_list ')'

   13 arg_list: arg_list ',' argument
   14         | argument

   15 argument: expr
   16         | STRING_LITERAL

   17 assign_statement: TK_ID '=' expr

   18 expr: KW_INPUT '(' STRING_LITERAL ')'
   19     | relational_expr

   20 relational_expr: expra OP_LTE expra
   21                | expra OP_GTE expra
   22                | expra OP_LT expra
   23                | expra OP_GT expra
   24                | expra OP_NE expra
   25                | expra OP_EQ expra
   26                | expra

   27 expra: expra '+' term
   28      | expra '-' term
   29      | term

   30 term: term '*' factor
   31     | term '/' factor
   32     | term '%' factor
   33     | exponent

   34 exponent: factor OP_EXP factor
   35         | factor

   36 factor: '(' expr ')'
   37       | '-' factor
   38       | TK_NUM
   39       | TK_ID


Terminals, with rules where they appear

$end (0) 0
'%' (37) 32
'(' (40) 10 12 18 36
')' (41) 10 12 18 36
'*' (42) 30
'+' (43) 27
',' (44) 10 13
'-' (45) 28 37
'/' (47) 31
';' (59) 4 5
'=' (61) 17
'{' (123) 11
'}' (125) 11
error (256)
TK_NUM (258) 38
TK_ID (259) 10 17 39
STRING_LITERAL (260) 16 18
KW_IF (261) 8
KW_ELSE (262) 9
KW_WHILE (263)
KW_FOR (264) 10
KW_IN (265) 10
KW_RANGE (266) 10
KW_PRINT (267) 12
KW_INPUT (268) 18
OP_EXP (269) 34
OP_LT (270) 22
OP_GT (271) 23
OP_LTE (272) 20
OP_GTE (273) 21
OP_NE (274) 24
OP_EQ (275) 25


Nonterminals, with rules where they appear

$accept (33)
    on left: 0
input (34)
    on left: 1, on right: 0
statement_list (35)
    on left: 2 3, on right: 1 2 11
statement (36)
    on left: 4 5 6 7, on right: 2 3
if_statement (37)
    on left: 8, on right: 7
opt_else (38)
    on left: 9, on right: 8
for_statement (39)
    on left: 10, on right: 6
statement_block (40)
    on left: 11, on right: 8 9 10
print_statement (41)
    on left: 12, on right: 4
arg_list (42)
    on left: 13 14, on right: 12 13
argument (43)
    on left: 15 16, on right: 13 14
assign_statement (44)
    on left: 17, on right: 5
expr (45)
    on left: 18 19, on right: 8 10 15 17 36
relational_expr (46)
    on left: 20 21 22 23 24 25 26, on right: 19
expra (47)
    on left: 27 28 29, on right: 20 21 22 23 24 25 26 27 28
term (48)
    on left: 30 31 32 33, on right: 27 28 29 30 31 32
exponent (49)
    on left: 34 35, on right: 33
factor (50)
    on left: 36 37 38 39, on right: 30 31 32 34 35 37


State 0

    0 $accept: . input $end
    1 input: . statement_list
    2 statement_list: . statement_list statement
    3               | . statement
    4 statement: . print_statement ';'
    5          | . assign_statement ';'
    6          | . for_statement
    7          | . if_statement
    8 if_statement: . KW_IF expr statement_block opt_else
   10 for_statement: . KW_FOR TK_ID KW_IN KW_RANGE '(' expr ',' expr ')' statement_block
   12 print_statement: . KW_PRINT '(' arg_list ')'
   17 assign_statement: . TK_ID '=' expr

    TK_ID     shift, and go to state 1
    KW_IF     shift, and go to state 2
    KW_FOR    shift, and go to state 3
    KW_PRINT  shift, and go to state 4

    input             go to state 5
    statement_list    go to state 6
    statement         go to state 7
    if_statement      go to state 8
    for_statement     go to state 9
    print_statement   go to state 10
    assign_statement  go to state 11


State 1

   17 assign_statement: TK_ID . '=' expr

    '='  shift, and go to state 12


State 2

    8 if_statement: KW_IF . expr statement_block opt_else
   18 expr: . KW_INPUT '(' STRING_LITERAL ')'
   19     | . relational_expr
   20 relational_expr: . expra OP_LTE expra
   21                | . expra OP_GTE expra
   22                | . expra OP_LT expra
   23                | . expra OP_GT expra
   24                | . expra OP_NE expra
   25                | . expra OP_EQ expra
   26                | . expra
   27 expra: . expra '+' term
   28      | . expra '-' term
   29      | . term
   30 term: . term '*' factor
   31     | . term '/' factor
   32     | . term '%' factor
   33     | . exponent
   34 exponent: . factor OP_EXP factor
   35         | . factor
   36 factor: . '(' expr ')'
   37       | . '-' factor
   38       | . TK_NUM
   39       | . TK_ID

    TK_NUM    shift, and go to state 13
    TK_ID     shift, and go to state 14
    KW_INPUT  shift, and go to state 15
    '('       shift, and go to state 16
    '-'       shift, and go to state 17

    expr             go to state 18
    relational_expr  go to state 19
    expra            go to state 20
    term             go to state 21
    exponent         go to state 22
    factor           go to state 23


State 3

   10 for_statement: KW_FOR . TK_ID KW_IN KW_RANGE '(' expr ',' expr ')' statement_block

    TK_ID  shift, and go to state 24


State 4

   12 print_statement: KW_PRINT . '(' arg_list ')'

    '('  shift, and go to state 25


State 5

    0 $accept: input . $end

    $end  shift, and go to state 26


State 6

    1 input: statement_list .  [$end]
    2 statement_list: statement_list . statement
    4 statement: . print_statement ';'
    5          | . assign_statement ';'
    6          | . for_statement
    7          | . if_statement
    8 if_statement: . KW_IF expr statement_block opt_else
   10 for_statement: . KW_FOR TK_ID KW_IN KW_RANGE '(' expr ',' expr ')' statement_block
   12 print_statement: . KW_PRINT '(' arg_list ')'
   17 assign_statement: . TK_ID '=' expr

    TK_ID     shift, and go to state 1
    KW_IF     shift, and go to state 2
    KW_FOR    shift, and go to state 3
    KW_PRINT  shift, and go to state 4

    $default  reduce using rule 1 (input)

    statement         go to state 27
    if_statement      go to state 8
    for_statement     go to state 9
    print_statement   go to state 10
    assign_statement  go to state 11


State 7

    3 statement_list: statement .

    $default  reduce using rule 3 (statement_list)


State 8

    7 statement: if_statement .

    $default  reduce using rule 7 (statement)


State 9

    6 statement: for_statement .

    $default  reduce using rule 6 (statement)


State 10

    4 statement: print_statement . ';'

    ';'  shift, and go to state 28


State 11

    5 statement: assign_statement . ';'

    ';'  shift, and go to state 29


State 12

   17 assign_statement: TK_ID '=' . expr
   18 expr: . KW_INPUT '(' STRING_LITERAL ')'
   19     | . relational_expr
   20 relational_expr: . expra OP_LTE expra
   21                | . expra OP_GTE expra
   22                | . expra OP_LT expra
   23                | . expra OP_GT expra
   24                | . expra OP_NE expra
   25                | . expra OP_EQ expra
   26                | . expra
   27 expra: . expra '+' term
   28      | . expra '-' term
   29      | . term
   30 term: . term '*' factor
   31     | . term '/' factor
   32     | . term '%' factor
   33     | . exponent
   34 exponent: . factor OP_EXP factor
   35         | . factor
   36 factor: . '(' expr ')'
   37       | . '-' factor
   38       | . TK_NUM
   39       | . TK_ID

    TK_NUM    shift, and go to state 13
    TK_ID     shift, and go to state 14
    KW_INPUT  shift, and go to state 15
    '('       shift, and go to state 16
    '-'       shift, and go to state 17

    expr             go to state 30
    relational_expr  go to state 19
    expra            go to state 20
    term             go to state 21
    exponent         go to state 22
    factor           go to state 23


State 13

   38 factor: TK_NUM .

    $default  reduce using rule 38 (factor)


State 14

   39 factor: TK_ID .

    $default  reduce using rule 39 (factor)


State 15

   18 expr: KW_INPUT . '(' STRING_LITERAL ')'

    '('  shift, and go to state 31


State 16

   18 expr: . KW_INPUT '(' STRING_LITERAL ')'
   19     | . relational_expr
   20 relational_expr: . expra OP_LTE expra
   21                | . expra OP_GTE expra
   22                | . expra OP_LT expra
   23                | . expra OP_GT expra
   24                | . expra OP_NE expra
   25                | . expra OP_EQ expra
   26                | . expra
   27 expra: . expra '+' term
   28      | . expra '-' term
   29      | . term
   30 term: . term '*' factor
   31     | . term '/' factor
   32     | . term '%' factor
   33     | . exponent
   34 exponent: . factor OP_EXP factor
   35         | . factor
   36 factor: . '(' expr ')'
   36       | '(' . expr ')'
   37       | . '-' factor
   38       | . TK_NUM
   39       | . TK_ID

    TK_NUM    shift, and go to state 13
    TK_ID     shift, and go to state 14
    KW_INPUT  shift, and go to state 15
    '('       shift, and go to state 16
    '-'       shift, and go to state 17

    expr             go to state 32
    relational_expr  go to state 19
    expra            go to state 20
    term             go to state 21
    exponent         go to state 22
    factor           go to state 23


State 17

   36 factor: . '(' expr ')'
   37       | . '-' factor
   37       | '-' . factor
   38       | . TK_NUM
   39       | . TK_ID

    TK_NUM  shift, and go to state 13
    TK_ID   shift, and go to state 14
    '('     shift, and go to state 16
    '-'     shift, and go to state 17

    factor  go to state 33


State 18

    8 if_statement: KW_IF expr . statement_block opt_else
   11 statement_block: . '{' statement_list '}'

    '{'  shift, and go to state 34

    statement_block  go to state 35


State 19

   19 expr: relational_expr .

    $default  reduce using rule 19 (expr)


State 20

   20 relational_expr: expra . OP_LTE expra
   21                | expra . OP_GTE expra
   22                | expra . OP_LT expra
   23                | expra . OP_GT expra
   24                | expra . OP_NE expra
   25                | expra . OP_EQ expra
   26                | expra .  [';', ',', ')', '{']
   27 expra: expra . '+' term
   28      | expra . '-' term

    OP_LT   shift, and go to state 36
    OP_GT   shift, and go to state 37
    OP_LTE  shift, and go to state 38
    OP_GTE  shift, and go to state 39
    OP_NE   shift, and go to state 40
    OP_EQ   shift, and go to state 41
    '+'     shift, and go to state 42
    '-'     shift, and go to state 43

    $default  reduce using rule 26 (relational_expr)


State 21

   29 expra: term .  [OP_LT, OP_GT, OP_LTE, OP_GTE, OP_NE, OP_EQ, ';', ',', ')', '{', '+', '-']
   30 term: term . '*' factor
   31     | term . '/' factor
   32     | term . '%' factor

    '*'  shift, and go to state 44
    '/'  shift, and go to state 45
    '%'  shift, and go to state 46

    $default  reduce using rule 29 (expra)


State 22

   33 term: exponent .

    $default  reduce using rule 33 (term)


State 23

   34 exponent: factor . OP_EXP factor
   35         | factor .  [OP_LT, OP_GT, OP_LTE, OP_GTE, OP_NE, OP_EQ, ';', ',', ')', '{', '+', '-', '*', '/', '%']

    OP_EXP  shift, and go to state 47

    $default  reduce using rule 35 (exponent)


State 24

   10 for_statement: KW_FOR TK_ID . KW_IN KW_RANGE '(' expr ',' expr ')' statement_block

    KW_IN  shift, and go to state 48


State 25

   12 print_statement: KW_PRINT '(' . arg_list ')'
   13 arg_list: . arg_list ',' argument
   14         | . argument
   15 argument: . expr
   16         | . STRING_LITERAL
   18 expr: . KW_INPUT '(' STRING_LITERAL ')'
   19     | . relational_expr
   20 relational_expr: . expra OP_LTE expra
   21                | . expra OP_GTE expra
   22                | . expra OP_LT expra
   23                | . expra OP_GT expra
   24                | . expra OP_NE expra
   25                | . expra OP_EQ expra
   26                | . expra
   27 expra: . expra '+' term
   28      | . expra '-' term
   29      | . term
   30 term: . term '*' factor
   31     | . term '/' factor
   32     | . term '%' factor
   33     | . exponent
   34 exponent: . factor OP_EXP factor
   35         | . factor
   36 factor: . '(' expr ')'
   37       | . '-' factor
   38       | . TK_NUM
   39       | . TK_ID

    TK_NUM          shift, and go to state 13
    TK_ID           shift, and go to state 14
    STRING_LITERAL  shift, and go to state 49
    KW_INPUT        shift, and go to state 15
    '('             shift, and go to state 16
    '-'             shift, and go to state 17

    arg_list         go to state 50
    argument         go to state 51
    expr             go to state 52
    relational_expr  go to state 19
    expra            go to state 20
    term             go to state 21
    exponent         go to state 22
    factor           go to state 23


State 26

    0 $accept: input $end .

    $default  accept


State 27

    2 statement_list: statement_list statement .

    $default  reduce using rule 2 (statement_list)


State 28

    4 statement: print_statement ';' .

    $default  reduce using rule 4 (statement)


State 29

    5 statement: assign_statement ';' .

    $default  reduce using rule 5 (statement)


State 30

   17 assign_statement: TK_ID '=' expr .

    $default  reduce using rule 17 (assign_statement)


State 31

   18 expr: KW_INPUT '(' . STRING_LITERAL ')'

    STRING_LITERAL  shift, and go to state 53


State 32

   36 factor: '(' expr . ')'

    ')'  shift, and go to state 54


State 33

   37 factor: '-' factor .

    $default  reduce using rule 37 (factor)


State 34

    2 statement_list: . statement_list statement
    3               | . statement
    4 statement: . print_statement ';'
    5          | . assign_statement ';'
    6          | . for_statement
    7          | . if_statement
    8 if_statement: . KW_IF expr statement_block opt_else
   10 for_statement: . KW_FOR TK_ID KW_IN KW_RANGE '(' expr ',' expr ')' statement_block
   11 statement_block: '{' . statement_list '}'
   12 print_statement: . KW_PRINT '(' arg_list ')'
   17 assign_statement: . TK_ID '=' expr

    TK_ID     shift, and go to state 1
    KW_IF     shift, and go to state 2
    KW_FOR    shift, and go to state 3
    KW_PRINT  shift, and go to state 4

    statement_list    go to state 55
    statement         go to state 7
    if_statement      go to state 8
    for_statement     go to state 9
    print_statement   go to state 10
    assign_statement  go to state 11


State 35

    8 if_statement: KW_IF expr statement_block . opt_else
    9 opt_else: . KW_ELSE statement_block

    KW_ELSE  shift, and go to state 56

    opt_else  go to state 57


State 36

   22 relational_expr: expra OP_LT . expra
   27 expra: . expra '+' term
   28      | . expra '-' term
   29      | . term
   30 term: . term '*' factor
   31     | . term '/' factor
   32     | . term '%' factor
   33     | . exponent
   34 exponent: . factor OP_EXP factor
   35         | . factor
   36 factor: . '(' expr ')'
   37       | . '-' factor
   38       | . TK_NUM
   39       | . TK_ID

    TK_NUM  shift, and go to state 13
    TK_ID   shift, and go to state 14
    '('     shift, and go to state 16
    '-'     shift, and go to state 17

    expra     go to state 58
    term      go to state 21
    exponent  go to state 22
    factor    go to state 23


State 37

   23 relational_expr: expra OP_GT . expra
   27 expra: . expra '+' term
   28      | . expra '-' term
   29      | . term
   30 term: . term '*' factor
   31     | . term '/' factor
   32     | . term '%' factor
   33     | . exponent
   34 exponent: . factor OP_EXP factor
   35         | . factor
   36 factor: . '(' expr ')'
   37       | . '-' factor
   38       | . TK_NUM
   39       | . TK_ID

    TK_NUM  shift, and go to state 13
    TK_ID   shift, and go to state 14
    '('     shift, and go to state 16
    '-'     shift, and go to state 17

    expra     go to state 59
    term      go to state 21
    exponent  go to state 22
    factor    go to state 23


State 38

   20 relational_expr: expra OP_LTE . expra
   27 expra: . expra '+' term
   28      | . expra '-' term
   29      | . term
   30 term: . term '*' factor
   31     | . term '/' factor
   32     | . term '%' factor
   33     | . exponent
   34 exponent: . factor OP_EXP factor
   35         | . factor
   36 factor: . '(' expr ')'
   37       | . '-' factor
   38       | . TK_NUM
   39       | . TK_ID

    TK_NUM  shift, and go to state 13
    TK_ID   shift, and go to state 14
    '('     shift, and go to state 16
    '-'     shift, and go to state 17

    expra     go to state 60
    term      go to state 21
    exponent  go to state 22
    factor    go to state 23


State 39

   21 relational_expr: expra OP_GTE . expra
   27 expra: . expra '+' term
   28      | . expra '-' term
   29      | . term
   30 term: . term '*' factor
   31     | . term '/' factor
   32     | . term '%' factor
   33     | . exponent
   34 exponent: . factor OP_EXP factor
   35         | . factor
   36 factor: . '(' expr ')'
   37       | . '-' factor
   38       | . TK_NUM
   39       | . TK_ID

    TK_NUM  shift, and go to state 13
    TK_ID   shift, and go to state 14
    '('     shift, and go to state 16
    '-'     shift, and go to state 17

    expra     go to state 61
    term      go to state 21
    exponent  go to state 22
    factor    go to state 23


State 40

   24 relational_expr: expra OP_NE . expra
   27 expra: . expra '+' term
   28      | . expra '-' term
   29      | . term
   30 term: . term '*' factor
   31     | . term '/' factor
   32     | . term '%' factor
   33     | . exponent
   34 exponent: . factor OP_EXP factor
   35         | . factor
   36 factor: . '(' expr ')'
   37       | . '-' factor
   38       | . TK_NUM
   39       | . TK_ID

    TK_NUM  shift, and go to state 13
    TK_ID   shift, and go to state 14
    '('     shift, and go to state 16
    '-'     shift, and go to state 17

    expra     go to state 62
    term      go to state 21
    exponent  go to state 22
    factor    go to state 23


State 41

   25 relational_expr: expra OP_EQ . expra
   27 expra: . expra '+' term
   28      | . expra '-' term
   29      | . term
   30 term: . term '*' factor
   31     | . term '/' factor
   32     | . term '%' factor
   33     | . exponent
   34 exponent: . factor OP_EXP factor
   35         | . factor
   36 factor: . '(' expr ')'
   37       | . '-' factor
   38       | . TK_NUM
   39       | . TK_ID

    TK_NUM  shift, and go to state 13
    TK_ID   shift, and go to state 14
    '('     shift, and go to state 16
    '-'     shift, and go to state 17

    expra     go to state 63
    term      go to state 21
    exponent  go to state 22
    factor    go to state 23


State 42

   27 expra: expra '+' . term
   30 term: . term '*' factor
   31     | . term '/' factor
   32     | . term '%' factor
   33     | . exponent
   34 exponent: . factor OP_EXP factor
   35         | . factor
   36 factor: . '(' expr ')'
   37       | . '-' factor
   38       | . TK_NUM
   39       | . TK_ID

    TK_NUM  shift, and go to state 13
    TK_ID   shift, and go to state 14
    '('     shift, and go to state 16
    '-'     shift, and go to state 17

    term      go to state 64
    exponent  go to state 22
    factor    go to state 23


State 43

   28 expra: expra '-' . term
   30 term: . term '*' factor
   31     | . term '/' factor
   32     | . term '%' factor
   33     | . exponent
   34 exponent: . factor OP_EXP factor
   35         | . factor
   36 factor: . '(' expr ')'
   37       | . '-' factor
   38       | . TK_NUM
   39       | . TK_ID

    TK_NUM  shift, and go to state 13
    TK_ID   shift, and go to state 14
    '('     shift, and go to state 16
    '-'     shift, and go to state 17

    term      go to state 65
    exponent  go to state 22
    factor    go to state 23


State 44

   30 term: term '*' . factor
   36 factor: . '(' expr ')'
   37       | . '-' factor
   38       | . TK_NUM
   39       | . TK_ID

    TK_NUM  shift, and go to state 13
    TK_ID   shift, and go to state 14
    '('     shift, and go to state 16
    '-'     shift, and go to state 17

    factor  go to state 66


State 45

   31 term: term '/' . factor
   36 factor: . '(' expr ')'
   37       | . '-' factor
   38       | . TK_NUM
   39       | . TK_ID

    TK_NUM  shift, and go to state 13
    TK_ID   shift, and go to state 14
    '('     shift, and go to state 16
    '-'     shift, and go to state 17

    factor  go to state 67


State 46

   32 term: term '%' . factor
   36 factor: . '(' expr ')'
   37       | . '-' factor
   38       | . TK_NUM
   39       | . TK_ID

    TK_NUM  shift, and go to state 13
    TK_ID   shift, and go to state 14
    '('     shift, and go to state 16
    '-'     shift, and go to state 17

    factor  go to state 68


State 47

   34 exponent: factor OP_EXP . factor
   36 factor: . '(' expr ')'
   37       | . '-' factor
   38       | . TK_NUM
   39       | . TK_ID

    TK_NUM  shift, and go to state 13
    TK_ID   shift, and go to state 14
    '('     shift, and go to state 16
    '-'     shift, and go to state 17

    factor  go to state 69


State 48

   10 for_statement: KW_FOR TK_ID KW_IN . KW_RANGE '(' expr ',' expr ')' statement_block

    KW_RANGE  shift, and go to state 70


State 49

   16 argument: STRING_LITERAL .

    $default  reduce using rule 16 (argument)


State 50

   12 print_statement: KW_PRINT '(' arg_list . ')'
   13 arg_list: arg_list . ',' argument

    ','  shift, and go to state 71
    ')'  shift, and go to state 72


State 51

   14 arg_list: argument .

    $default  reduce using rule 14 (arg_list)


State 52

   15 argument: expr .

    $default  reduce using rule 15 (argument)


State 53

   18 expr: KW_INPUT '(' STRING_LITERAL . ')'

    ')'  shift, and go to state 73


State 54

   36 factor: '(' expr ')' .

    $default  reduce using rule 36 (factor)


State 55

    2 statement_list: statement_list . statement
    4 statement: . print_statement ';'
    5          | . assign_statement ';'
    6          | . for_statement
    7          | . if_statement
    8 if_statement: . KW_IF expr statement_block opt_else
   10 for_statement: . KW_FOR TK_ID KW_IN KW_RANGE '(' expr ',' expr ')' statement_block
   11 statement_block: '{' statement_list . '}'
   12 print_statement: . KW_PRINT '(' arg_list ')'
   17 assign_statement: . TK_ID '=' expr

    TK_ID     shift, and go to state 1
    KW_IF     shift, and go to state 2
    KW_FOR    shift, and go to state 3
    KW_PRINT  shift, and go to state 4
    '}'       shift, and go to state 74

    statement         go to state 27
    if_statement      go to state 8
    for_statement     go to state 9
    print_statement   go to state 10
    assign_statement  go to state 11


State 56

    9 opt_else: KW_ELSE . statement_block
   11 statement_block: . '{' statement_list '}'

    '{'  shift, and go to state 34

    statement_block  go to state 75


State 57

    8 if_statement: KW_IF expr statement_block opt_else .

    $default  reduce using rule 8 (if_statement)


State 58

   22 relational_expr: expra OP_LT expra .  [';', ',', ')', '{']
   27 expra: expra . '+' term
   28      | expra . '-' term

    '+'  shift, and go to state 42
    '-'  shift, and go to state 43

    $default  reduce using rule 22 (relational_expr)


State 59

   23 relational_expr: expra OP_GT expra .  [';', ',', ')', '{']
   27 expra: expra . '+' term
   28      | expra . '-' term

    '+'  shift, and go to state 42
    '-'  shift, and go to state 43

    $default  reduce using rule 23 (relational_expr)


State 60

   20 relational_expr: expra OP_LTE expra .  [';', ',', ')', '{']
   27 expra: expra . '+' term
   28      | expra . '-' term

    '+'  shift, and go to state 42
    '-'  shift, and go to state 43

    $default  reduce using rule 20 (relational_expr)


State 61

   21 relational_expr: expra OP_GTE expra .  [';', ',', ')', '{']
   27 expra: expra . '+' term
   28      | expra . '-' term

    '+'  shift, and go to state 42
    '-'  shift, and go to state 43

    $default  reduce using rule 21 (relational_expr)


State 62

   24 relational_expr: expra OP_NE expra .  [';', ',', ')', '{']
   27 expra: expra . '+' term
   28      | expra . '-' term

    '+'  shift, and go to state 42
    '-'  shift, and go to state 43

    $default  reduce using rule 24 (relational_expr)


State 63

   25 relational_expr: expra OP_EQ expra .  [';', ',', ')', '{']
   27 expra: expra . '+' term
   28      | expra . '-' term

    '+'  shift, and go to state 42
    '-'  shift, and go to state 43

    $default  reduce using rule 25 (relational_expr)


State 64

   27 expra: expra '+' term .  [OP_LT, OP_GT, OP_LTE, OP_GTE, OP_NE, OP_EQ, ';', ',', ')', '{', '+', '-']
   30 term: term . '*' factor
   31     | term . '/' factor
   32     | term . '%' factor

    '*'  shift, and go to state 44
    '/'  shift, and go to state 45
    '%'  shift, and go to state 46

    $default  reduce using rule 27 (expra)


State 65

   28 expra: expra '-' term .  [OP_LT, OP_GT, OP_LTE, OP_GTE, OP_NE, OP_EQ, ';', ',', ')', '{', '+', '-']
   30 term: term . '*' factor
   31     | term . '/' factor
   32     | term . '%' factor

    '*'  shift, and go to state 44
    '/'  shift, and go to state 45
    '%'  shift, and go to state 46

    $default  reduce using rule 28 (expra)


State 66

   30 term: term '*' factor .

    $default  reduce using rule 30 (term)


State 67

   31 term: term '/' factor .

    $default  reduce using rule 31 (term)


State 68

   32 term: term '%' factor .

    $default  reduce using rule 32 (term)


State 69

   34 exponent: factor OP_EXP factor .

    $default  reduce using rule 34 (exponent)


State 70

   10 for_statement: KW_FOR TK_ID KW_IN KW_RANGE . '(' expr ',' expr ')' statement_block

    '('  shift, and go to state 76


State 71

   13 arg_list: arg_list ',' . argument
   15 argument: . expr
   16         | . STRING_LITERAL
   18 expr: . KW_INPUT '(' STRING_LITERAL ')'
   19     | . relational_expr
   20 relational_expr: . expra OP_LTE expra
   21                | . expra OP_GTE expra
   22                | . expra OP_LT expra
   23                | . expra OP_GT expra
   24                | . expra OP_NE expra
   25                | . expra OP_EQ expra
   26                | . expra
   27 expra: . expra '+' term
   28      | . expra '-' term
   29      | . term
   30 term: . term '*' factor
   31     | . term '/' factor
   32     | . term '%' factor
   33     | . exponent
   34 exponent: . factor OP_EXP factor
   35         | . factor
   36 factor: . '(' expr ')'
   37       | . '-' factor
   38       | . TK_NUM
   39       | . TK_ID

    TK_NUM          shift, and go to state 13
    TK_ID           shift, and go to state 14
    STRING_LITERAL  shift, and go to state 49
    KW_INPUT        shift, and go to state 15
    '('             shift, and go to state 16
    '-'             shift, and go to state 17

    argument         go to state 77
    expr             go to state 52
    relational_expr  go to state 19
    expra            go to state 20
    term             go to state 21
    exponent         go to state 22
    factor           go to state 23


State 72

   12 print_statement: KW_PRINT '(' arg_list ')' .

    $default  reduce using rule 12 (print_statement)


State 73

   18 expr: KW_INPUT '(' STRING_LITERAL ')' .

    $default  reduce using rule 18 (expr)


State 74

   11 statement_block: '{' statement_list '}' .

    $default  reduce using rule 11 (statement_block)


State 75

    9 opt_else: KW_ELSE statement_block .

    $default  reduce using rule 9 (opt_else)


State 76

   10 for_statement: KW_FOR TK_ID KW_IN KW_RANGE '(' . expr ',' expr ')' statement_block
   18 expr: . KW_INPUT '(' STRING_LITERAL ')'
   19     | . relational_expr
   20 relational_expr: . expra OP_LTE expra
   21                | . expra OP_GTE expra
   22                | . expra OP_LT expra
   23                | . expra OP_GT expra
   24                | . expra OP_NE expra
   25                | . expra OP_EQ expra
   26                | . expra
   27 expra: . expra '+' term
   28      | . expra '-' term
   29      | . term
   30 term: . term '*' factor
   31     | . term '/' factor
   32     | . term '%' factor
   33     | . exponent
   34 exponent: . factor OP_EXP factor
   35         | . factor
   36 factor: . '(' expr ')'
   37       | . '-' factor
   38       | . TK_NUM
   39       | . TK_ID

    TK_NUM    shift, and go to state 13
    TK_ID     shift, and go to state 14
    KW_INPUT  shift, and go to state 15
    '('       shift, and go to state 16
    '-'       shift, and go to state 17

    expr             go to state 78
    relational_expr  go to state 19
    expra            go to state 20
    term             go to state 21
    exponent         go to state 22
    factor           go to state 23


State 77

   13 arg_list: arg_list ',' argument .

    $default  reduce using rule 13 (arg_list)


State 78

   10 for_statement: KW_FOR TK_ID KW_IN KW_RANGE '(' expr . ',' expr ')' statement_block

    ','  shift, and go to state 79


State 79

   10 for_statement: KW_FOR TK_ID KW_IN KW_RANGE '(' expr ',' . expr ')' statement_block
   18 expr: . KW_INPUT '(' STRING_LITERAL ')'
   19     | . relational_expr
   20 relational_expr: . expra OP_LTE expra
   21                | . expra OP_GTE expra
   22                | . expra OP_LT expra
   23                | . expra OP_GT expra
   24                | . expra OP_NE expra
   25                | . expra OP_EQ expra
   26                | . expra
   27 expra: . expra '+' term
   28      | . expra '-' term
   29      | . term
   30 term: . term '*' factor
   31     | . term '/' factor
   32     | . term '%' factor
   33     | . exponent
   34 exponent: . factor OP_EXP factor
   35         | . factor
   36 factor: . '(' expr ')'
   37       | . '-' factor
   38       | . TK_NUM
   39       | . TK_ID

    TK_NUM    shift, and go to state 13
    TK_ID     shift, and go to state 14
    KW_INPUT  shift, and go to state 15
    '('       shift, and go to state 16
    '-'       shift, and go to state 17

    expr             go to state 80
    relational_expr  go to state 19
    expra            go to state 20
    term             go to state 21
    exponent         go to state 22
    factor           go to state 23


State 80

   10 for_statement: KW_FOR TK_ID KW_IN KW_RANGE '(' expr ',' expr . ')' statement_block

    ')'  shift, and go to state 81


State 81

   10 for_statement: KW_FOR TK_ID KW_IN KW_RANGE '(' expr ',' expr ')' . statement_block
   11 statement_block: . '{' statement_list '}'

    '{'  shift, and go to state 34

    statement_block  go to state 82


State 82

   10 for_statement: KW_FOR TK_ID KW_IN KW_RANGE '(' expr ',' expr ')' statement_block .

    $default  reduce using rule 10 (for_statement)
